// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  pending
  started
  done
  uncompleted
}

model User {
  userID       Int      @id @default(autoincrement())
  firstName    String   @db.VarChar(40)
  lastName     String   @db.VarChar(40)
  email        String   @unique @db.VarChar(100)
  password     String
  date_created DateTime @default(now())
  tasks        Task[]
  otp          OTP[]
}

model Task {
  taskID       Int       @id @default(autoincrement())
  userID       Int
  user         User      @relation(fields: [userID], references: [userID])
  taskName     String    @db.VarChar(100)
  description  String?
  status       Status    @default(pending)
  date_created DateTime  @default(now())
  due_date     DateTime
  reminderDate DateTime
  subTasks     SubTask[]
}

model SubTask {
  subTaskID   Int     @id @default(autoincrement())
  taskID      Int
  task        Task    @relation(fields: [taskID], references: [taskID])
  subTaskName String  @db.VarChar(100)
  description String?
  completed   Boolean @default(false)
}

model OTP {
  otpID     Int      @id @default(autoincrement())
  User      User?    @relation(fields: [userID], references: [userID])
  userID    Int?
  otp       String   @db.VarChar(6)
  createdAt DateTime @default(now())
  expiredAt DateTime
}
